usertype SessionKey;
usertype TimeStamp;
const succ,pred: Function;
inversekeys (succ,pred);
const Fresh: Function;

protocol WMF-Lowe(Alice,Bob,Charles){
  role Alice{
    fresh Kab: SessionKey;
    fresh Ta: TimeStamp;
    var nonceB: Nonce;

    send_1(Alice,Charles,Alice,{Ta,Bob,Kab}k(Alice,Charles));
    recv_3(Bob,Alice,{nonceB}Kab);
    send_4(Alice,Bob,{{nonceB}succ}Kab);

    claim_Alice1(Alice,Secret,Kab);
    claim_Alice2(Alice,Nisynch);
    claim_Alice3(Alice,Empty,(Fresh,Kab));
    claim_Alice4(Alice,Secret,nonceB);
  }
  role Bob{
    var Kab: SessionKey;
    var Tc: TimeStamp;
    fresh nonceB: Nonce;
    recv_2(Charles,Bob,{Tc,Alice,Kab}k(Bob,Charles));
    send_3(Bob,Alice,{nonceB}Kab);
    recv_4(Alice,Bob,{{nonceB}succ}Kab);
    claim_Bob1(Bob,Secret,Kab); 
    claim_Bob2(Bob,Nisynch);
    claim_Bob3(Bob,Empty,(Fresh,Kab));
    claim_Bob4(Bob,Secret,nonceB);
  }
  role Charles{
    var Kab: SessionKey;
    fresh Tc: TimeStamp;
    var Ta: TimeStamp;
    recv_1(Alice,Charles,Alice,{Ta,Bob,Kab}k(Alice,Charles));
    send_2(Charles,Bob,{Tc,Alice,Kab}k(Bob,Charles));
  }
}
